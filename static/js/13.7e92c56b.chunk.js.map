{"version":3,"sources":["Components/Topbar.js","action/GlobalAction.js","Components/images/color.svg","Components/images/dark.svg"],"names":["BlackOnGreenTooltip","withStyles","paper","background","color","props","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","theme","root","backgroundColor","palette","primary","main","common","white","MenuItem","tooltip","fontSize","arrow","Tooltip","BlueOnGreenTooltip","Topbar","useState","showMenu","setShowMenu","history","useHistory","dispatch","useDispatch","React","colorSelector","useSelector","state","globalData","colorState","handleChange","componentMode","t","moment","utc","format","remaningTime","Number","split","handeHomePage","push","handelAboutUs","renderer","hours","minutes","seconds","completed","className","showTooltipMobile","setShowTooltipMobile","handleClickAwayTop20ToolTip","only","position","style","onClickAway","edge","aria-label","onClick","variant","display","width","justifyContent","alignItems","date","Date","now","title","TransitionComponent","Zoom","open","src","colorIcon","marginLeft","marginTop","height","darkIcon","id","paddingRight","cursor","top20DataAction","data","type","payload","hot20DataAction","regionsDataAction","componentHeight","setHistory","setTabValue","setSelectorText","setCallUserLocation","top20NewDataAction","getGlobalTrending"],"mappings":"4YAuFMA,GA9DaC,YAAW,CAC5BC,MAAO,CACLC,WAAY,UACZC,MAAO,UAHQH,EAKhB,SAACI,GAAD,OACD,cAAC,IAAD,aACEC,UAAW,EACXC,mBAAoB,KACpBC,aAAc,CACZC,SAAU,SACVC,WAAY,UAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,WAEVL,OAGYJ,YAAW,CAC7BC,MAAO,CACLC,WAAY,QACZC,MAAO,UAHSH,EAKjB,SAACI,GAAD,OACD,cAAC,IAAD,aACEC,UAAW,EACXC,mBAAoB,KACpBC,aAAc,CACZC,SAAU,SACVC,WAAY,UAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,WAEVL,OAIeJ,aAAW,SAACW,GAAD,MAAY,CAC5CC,KAAM,CACJ,UAAW,CACTC,gBAAiBF,EAAMG,QAAQC,QAAQC,KACvC,sDAAuD,CACrDb,MAAOQ,EAAMG,QAAQG,OAAOC,YALblB,CASnBmB,KACoBnB,aAAW,SAACW,GAAD,MAAY,CAC7CC,KAAM,CACJ,UAAW,CACTC,gBAAiB,QACjB,sDAAuD,CACrDV,MAAOQ,EAAMG,QAAQG,OAAOC,YALZlB,CASpBmB,KAEwBnB,YAAW,CACrCoB,QAAS,CACPjB,MAAO,QACPU,gBAAiB,UACjBQ,SAAU,IAEZC,MAAO,CACLD,SAAU,GACV,YAAa,CACXR,gBAAiB,aATKb,CAYzBuB,MACGC,EAAqBxB,YAAW,CACpCoB,QAAS,CACPjB,MAAO,QACPU,gBAAiB,OACjBQ,SAAU,IAEZC,MAAO,CACLD,SAAU,GACV,YAAa,CACXR,gBAAiB,UATIb,CAYxBuB,KAmaYE,UAjaA,WAAO,IAAD,EACaC,oBAAS,GADtB,mBACZC,EADY,KACFC,EADE,KAEfC,EAAUC,cACRC,EAAWC,cAHE,EAKaC,IAAMP,SAAS,MAL5B,mBAebQ,GAfa,UAeGC,aAAY,SAACC,GAAD,OAAWA,EAAMC,WAAWC,eAExDC,EAAe,WACnBR,EAASS,aAAeN,KAKtBO,EAAIC,IAAOC,MAAMC,OAAO,YAMxBC,EARY,OAIY,GAA1BC,OAAOL,EAAEM,MAAM,KAAK,IAAW,GAAK,IACV,GAA1BD,OAAOL,EAAEM,MAAM,KAAK,IAAW,IACL,IAA1BD,OAAOL,EAAEM,MAAM,KAAK,KAQlBC,EAAgB,WAClBpB,GAAY,GACZC,EAAQoB,KAAK,MAEXC,EAAgB,WAClBtB,GAAY,GAEZC,EAAQoB,KAAK,WAyBTE,EAAW,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,QAAyB,EAAhBC,UAC3C,OACE,uBAAMC,UAAU,WAAhB,UACGJ,EAAQ,GAAK,IAAMA,EAAQA,EAD9B,IAEGC,EAAU,GAAK,IAAMA,EAAUA,EAFlC,IAGGC,EAAU,GAAK,IAAMA,EAAUA,MAxEnB,EA4E+B5B,oBAAS,GA5ExC,mBA4EZ+B,EA5EY,KA4EOC,EA5EP,KA8EfC,EAA8B,WAChCD,GAAqB,IAGvB,OACE,qCACE,cAAC,IAAD,CAAQE,KAAM,CAAC,KAAM,KAAM,MAA3B,SACE,eAAC,IAAD,CACEC,SAAS,SACTC,MAAO,CAAE5D,WAAYgC,EAAgB,QAAU,WAFjD,UAIE,kGAEMA,EAAgB,UAAY,UAFlC,4uBAuDA,eAAC,IAAD,WACE,cAAC,IAAD,CAAmB6B,YAzFS,WACpCnC,GAAY,IAwFJ,SACE,cAAC,IAAD,CACEoC,KAAK,QACL7D,MAAM,UACN8D,aAAW,OACXC,QAvHO,WACnBtC,GAAaD,IAkHH,SAMGA,EAAW,cAAC,IAAD,IAAsB,cAAC,IAAD,QAGtC,cAAC,IAAD,CACEwC,QAAQ,KACRX,UAAU,eACVU,QAASlB,EAHX,yBAQA,sBACEc,MAAO,CACLM,QAAS,OACTC,MAAO,OACPC,eAAgB,SAChBC,WAAY,UALhB,UAQE,cAAC,IAAD,CAAWC,KAAMC,KAAKC,MAAQ7B,EAAcM,SAAUA,IAErDjB,EACC,cAAC,IAAD,CAAmB6B,YAAaJ,EAAhC,SACE,cAAC5D,EAAD,CACE4E,MAAM,4CACNrD,OAAK,EACLsD,oBAAqBC,IACrBC,KAAMrB,EAJR,SAME,qBACEsB,IAAKC,IACLlB,MAAO,CACLmB,WAAY,OACZC,UAAW,KACXb,MAAO,OACPc,OAAQ,QAEVjB,QAAS,kBAAMR,GAAqB,UAK1C,cAAC,IAAD,CAAmBK,YAAaJ,EAAhC,SACE,cAACnC,EAAD,CACEmD,MAAM,4CACNb,MAAO,CAAE3D,MAAO,OAChBmB,OAAK,EACLsD,oBAAqBC,IACrBC,KAAMrB,EALR,SAOE,qBACEsB,IAAKK,IACLtB,MAAO,CACLmB,WAAY,OACZC,UAAW,KACXb,MAAO,OACPc,OAAQ,QAEVjB,QAAS,kBAAMR,GAAqB,aAM9C,8BACE,cAAC,IAAD,CAAYO,aAAW,eAAeC,QAAS3B,EAA/C,SACGL,EACC,cAAC,IAAD,CAAa4B,MAAO,CAAE3D,MAAO,WAE7B,cAAC,IAAD,CAAiB2D,MAAO,CAAE3D,MAAO,kBAKxC+B,EACC,qBAAKmD,GAAI1D,EAAW,kBAAoB,qBAAxC,SACE,qBAAK6B,UAAU,mBAAmBU,QAAShB,EAA3C,SACE,0CAcJ,qBAAKmC,GAAI1D,EAAW,aAAe,gBAAnC,SACE,qBAAK6B,UAAU,mBAAmBU,QAAShB,EAA3C,SACE,gDAgBV,cAAC,IAAD,CAAQU,KAAM,CAAC,KAAM,MAArB,SACE,eAAC,IAAD,CACEC,SAAS,SACTC,MAAO,CAAE5D,WAAYgC,EAAgB,QAAU,WAFjD,UAIE,kGAEMA,EAAgB,UAAY,UAFlC,0EAQMA,EAAgB,QAAU,UARhC,uGAcMA,EAAgB,UAAY,QAdlC,mCAqBA,eAAC,IAAD,CAAS4B,MAAO,CAAEwB,aAAc,MAAhC,UACE,cAAC,IAAD,CACEnB,QAAQ,KACRL,MAAO,CAAEyB,OAAQ,WACjBrB,QAASlB,EAHX,yBAWA,sBACEc,MAAO,CACLmB,WAAY,OACZb,QAAS,OACTE,eAAgB,SAChBC,WAAY,UALhB,UAQE,cAAC,IAAD,CAAWC,KAAMC,KAAKC,MAAQ7B,EAAcM,SAAUA,IAErDjB,EACC,cAACnC,EAAD,CACE4E,MAAM,4CACNb,MAAO,CAAE3D,MAAO,OAChBmB,OAAK,EACLsD,oBAAqBC,IAJvB,SAME,qBACEE,IAAKC,IACLlB,MAAO,CACLmB,WAAY,OACZC,UAAW,KACXb,MAAO,OACPc,OAAQ,YAKd,cAAC3D,EAAD,CACEmD,MAAM,6CAENb,MAAO,CAAE3D,MAAO,OAChBmB,OAAK,EACLsD,oBAAqBC,IALvB,SAOE,qBACEE,IAAKK,IACLtB,MAAO,CACLmB,WAAY,OACZC,UAAW,KACXb,MAAO,OACPc,OAAQ,eAOlB,qBACErB,MAAO,CACLM,QAAS,OACTC,MAAO,OACPC,eAAgB,YAJpB,SAOE,mBAAGd,UAAU,eAAeU,QAAShB,EAArC,qBAiDF,cAAC,IAAD,CAAYe,aAAW,eAAeC,QAAS3B,EAA/C,SACGL,EACC,cAAC,IAAD,CAAa4B,MAAO,CAAE3D,MAAO,WAE7B,cAAC,IAAD,CAAiB2D,MAAO,CAAE3D,MAAO,0B,gCCzgBjD,sXAAO,IAAMqF,EAAkB,SAACC,GAC9B,MAAO,CACLC,KAAM,oBACNC,QAASF,IAGAG,EAAkB,SAACH,GAC9B,MAAO,CACLC,KAAM,oBACNC,QAASF,IAIAI,EAAoB,SAACJ,GAChC,MAAO,CACLC,KAAM,eACNC,QAASF,IAIAK,EAAkB,SAACL,GAC9B,MAAO,CACLC,KAAM,uBACNC,QAASF,IAIAjD,EAAgB,SAACiD,GAC5B,MAAO,CACLC,KAAM,qBACNC,QAASF,IAUAM,EAAa,SAACN,GACzB,MAAO,CACLC,KAAM,cACNC,QAASF,IAGAO,EAAc,SAACP,GAC1B,MAAO,CACLC,KAAM,gBACNC,QAASF,IAGAQ,EAAkB,SAACR,GAC9B,MAAO,CACLC,KAAM,oBACNC,QAASF,IASAS,EAAsB,SAACT,GAClC,MAAO,CACLC,KAAM,yBACNC,QAASF,IAIAU,EAAqB,SAACV,GACjC,MAAO,CACLC,KAAM,iBACNC,QAASF,IAIAW,EAAoB,SAACX,GAChC,MAAO,CACLC,KAAM,sBACNC,QAASF,K,gCCjFE,QAA0B,mC,gCCA1B,QAA0B","file":"static/js/13.7e92c56b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { Hidden } from \"@material-ui/core\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport { useHistory } from \"react-router-dom\";\nimport moment from \"moment\";\nimport Countdown from \"react-countdown\";\nimport { componentMode } from \"../action/GlobalAction\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\nimport Brightness3Icon from \"@material-ui/icons/Brightness3\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport Zoom from \"@material-ui/core/Zoom\";\nimport colorIcon from \"./images/color.svg\";\nimport darkIcon from \"./images/dark.svg\";\n\nconst StyledMenu = withStyles({\n  paper: {\n    background: \"#3F51B5\",\n    color: \"white\",\n  },\n})((props) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: \"bottom\",\n      horizontal: \"center\",\n    }}\n    transformOrigin={{\n      vertical: \"top\",\n      horizontal: \"center\",\n    }}\n    {...props}\n  />\n));\nconst StyledMenu2 = withStyles({\n  paper: {\n    background: \"black\",\n    color: \"white\",\n  },\n})((props) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: \"bottom\",\n      horizontal: \"center\",\n    }}\n    transformOrigin={{\n      vertical: \"top\",\n      horizontal: \"center\",\n    }}\n    {...props}\n  />\n));\n\nconst StyledMenuItem = withStyles((theme) => ({\n  root: {\n    \"&:focus\": {\n      backgroundColor: theme.palette.primary.main,\n      \"& .MuiListItemIcon-root, & .MuiListItemText-primary\": {\n        color: theme.palette.common.white,\n      },\n    },\n  },\n}))(MenuItem);\nconst StyledMenuItem2 = withStyles((theme) => ({\n  root: {\n    \"&:focus\": {\n      backgroundColor: \"black\",\n      \"& .MuiListItemIcon-root, & .MuiListItemText-primary\": {\n        color: theme.palette.common.white,\n      },\n    },\n  },\n}))(MenuItem);\n\nconst BlackOnGreenTooltip = withStyles({\n  tooltip: {\n    color: \"white\",\n    backgroundColor: \"#0f478c\",\n    fontSize: 16,\n  },\n  arrow: {\n    fontSize: 20,\n    \"&::before\": {\n      backgroundColor: \"#0f478c\",\n    },\n  },\n})(Tooltip);\nconst BlueOnGreenTooltip = withStyles({\n  tooltip: {\n    color: \"white\",\n    backgroundColor: \"gray\",\n    fontSize: 16,\n  },\n  arrow: {\n    fontSize: 20,\n    \"&::before\": {\n      backgroundColor: \"gray\",\n    },\n  },\n})(Tooltip);\n\nconst Topbar = () => {\n  const [showMenu, setShowMenu] = useState(false);\n  let history = useHistory();\n  const dispatch = useDispatch();\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const colorSelector = useSelector((state) => state.globalData.colorState);\n\n  const handleChange = () => {\n    dispatch(componentMode(!colorSelector));\n  };\n\n  let finalTime = 86400000;\n\n  let t = moment.utc().format(\"HH:mm:ss\");\n  let ms =\n    Number(t.split(\":\")[0]) * 60 * 60 * 1000 +\n    Number(t.split(\":\")[1]) * 60 * 1000 +\n    Number(t.split(\":\")[2]) * 1000;\n\n  let remaningTime = finalTime - ms;\n\n  let handelMenuShow = () => {\n    setShowMenu(!showMenu);\n  };\n\n  let handeHomePage = () => {\n    setShowMenu(false);\n    history.push(\"/\");\n  };\n  let handelAboutUs = () => {\n    setShowMenu(false);\n\n    history.push(\"/guide\");\n  };\n\n  let handelCharity = () => {\n    setShowMenu(false);\n\n    history.push(\"/charity\");\n  };\n\n  let handelPush = (e) => {\n    history.push(e);\n    setAnchorEl(null);\n  };\n\n  let handleClickAwayFromSearchRegion = () => {\n    setShowMenu(false);\n  };\n\n  let handelSignup = () => {\n    history.push(\"/signup\");\n  };\n  let handelLogin = () => {\n    history.push(\"/signin\");\n  };\n\n  const renderer = ({ hours, minutes, seconds, completed }) => {\n    return (\n      <span className=\"spanTime\">\n        {hours < 10 ? \"0\" + hours : hours}:\n        {minutes < 10 ? \"0\" + minutes : minutes}:\n        {seconds < 10 ? \"0\" + seconds : seconds}\n      </span>\n    );\n  };\n  const [showTooltipMobile, setShowTooltipMobile] = useState(false);\n\n  let handleClickAwayTop20ToolTip = () => {\n    setShowTooltipMobile(false);\n  };\n\n  return (\n    <>\n      <Hidden only={[\"md\", \"lg\", \"xl\"]}>\n        <AppBar\n          position=\"static\"\n          style={{ background: colorSelector ? \"black\" : \"#3f51b5\" }}\n        >\n          <style>{`body {\n  overflow-x: hidden !important;\n  background: ${colorSelector ? \"#424242\" : \"#F0EFEF\"};\n}\n\n.topBarMobile{\n  width:100%;\n  display:flex;\n  cursor:pointer;\n  justify-content:center;\n}\n\n.topBeta{\n  width: 100%;\n  display: flex;\n  cursor: pointer;\n  font-size: 12px;\n  margin-left: 10px;\n}\n\n\n@media only screen and (max-width: 355px) {\n  .topBarMobile{\n    font-size:14px\n  }\n  .topBeta{\n    width: 100%;\n    display: flex;\n    cursor: pointer;\n    font-size: 10px;\n    margin-left: 8px;\n  }\n  .spanTime{\n    font-size:14px;\n    \n  }\n}\n@media only screen and (max-width: 280px) {\n  .topBarMobile{\n    font-size:12px\n  }\n  .topBeta{\n    width: 100%;\n    display: flex;\n    cursor: pointer;\n    font-size: 8px;\n    margin-left: 8px;\n  }\n  .spanTime{\n    font-size:12px;\n    \n  }\n}\n\n`}</style>\n          <Toolbar>\n            <ClickAwayListener onClickAway={handleClickAwayFromSearchRegion}>\n              <IconButton\n                edge=\"start\"\n                color=\"inherit\"\n                aria-label=\"menu\"\n                onClick={handelMenuShow}\n              >\n                {showMenu ? <ArrowUpwardIcon /> : <MenuIcon />}\n              </IconButton>\n            </ClickAwayListener>\n            <Typography\n              variant=\"h6\"\n              className=\"topBarMobile\"\n              onClick={handeHomePage}\n            >\n              GlobalHot20\n            </Typography>\n            {/* <Typography className=\"topBeta\">Beta 3.0</Typography> */}\n            <div\n              style={{\n                display: \"flex\",\n                width: \"100%\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <Countdown date={Date.now() + remaningTime} renderer={renderer} />\n\n              {colorSelector ? (\n                <ClickAwayListener onClickAway={handleClickAwayTop20ToolTip}>\n                  <BlackOnGreenTooltip\n                    title=\"count down to the next day’s results\"\n                    arrow\n                    TransitionComponent={Zoom}\n                    open={showTooltipMobile}\n                  >\n                    <img\n                      src={colorIcon}\n                      style={{\n                        marginLeft: \"10px\",\n                        marginTop: \"1%\",\n                        width: \"20px\",\n                        height: \"20px\",\n                      }}\n                      onClick={() => setShowTooltipMobile(true)}\n                    />\n                  </BlackOnGreenTooltip>\n                </ClickAwayListener>\n              ) : (\n                <ClickAwayListener onClickAway={handleClickAwayTop20ToolTip}>\n                  <BlueOnGreenTooltip\n                    title=\"count down to the next day’s results\"\n                    style={{ color: \"red\" }}\n                    arrow\n                    TransitionComponent={Zoom}\n                    open={showTooltipMobile}\n                  >\n                    <img\n                      src={darkIcon}\n                      style={{\n                        marginLeft: \"10px\",\n                        marginTop: \"1%\",\n                        width: \"20px\",\n                        height: \"20px\",\n                      }}\n                      onClick={() => setShowTooltipMobile(true)}\n                    />\n                  </BlueOnGreenTooltip>\n                </ClickAwayListener>\n              )}\n            </div>\n            <div>\n              <IconButton aria-label=\"add an alarm\" onClick={handleChange}>\n                {colorSelector ? (\n                  <WbSunnyIcon style={{ color: \"white\" }} />\n                ) : (\n                  <Brightness3Icon style={{ color: \"black\" }} />\n                )}\n              </IconButton>\n            </div>\n          </Toolbar>\n          {colorSelector ? (\n            <div id={showMenu ? \"mobileMenuBlack\" : \"mobileMenuOffBlack\"}>\n              <div className=\"mobilemenuoption\" onClick={handelAboutUs}>\n                <p>Guide</p>\n              </div>\n\n              {/* <div className=\"mobilemenuoption\">\n                <p onClick={handelCharity}>Charities</p>\n              </div> */}\n              {/* <div className=\"mobilemenuoption\">\n                <p onClick={handelLogin}>Login</p>\n              </div>\n              <div className=\"mobilemenuoption\">\n                <p onClick={handelSignup}>Sign Up</p>\n              </div> */}\n            </div>\n          ) : (\n            <div id={showMenu ? \"mobileMenu\" : \"mobileMenuOff\"}>\n              <div className=\"mobilemenuoption\" onClick={handelAboutUs}>\n                <p>Guide </p>\n              </div>\n\n              {/* <div className=\"mobilemenuoption\">\n                <p onClick={handelCharity}>Charities</p>\n              </div> */}\n              {/* <div className=\"mobilemenuoption\">\n                <p onClick={handelLogin}>Login</p>\n              </div>\n              <div className=\"mobilemenuoption\">\n                <p onClick={handelSignup}>Sign Up</p>\n              </div> */}\n            </div>\n          )}\n        </AppBar>\n      </Hidden>\n      <Hidden only={[\"sm\", \"xs\"]}>\n        <AppBar\n          position=\"static\"\n          style={{ background: colorSelector ? \"black\" : \"#3f51b5\" }}\n        >\n          <style>{`body {\n  overflow-x: hidden !important;\n  background: ${colorSelector ? \"#424242\" : \"#F0EFEF\"};\n}\n\n::-webkit-scrollbar {\n  width: 12px;\n\n  background: ${colorSelector ? \"black\" : \"#3F51B5\"};\n  display:none;\n}\n::-webkit-scrollbar-thumb {\n  border-radius: 10px;\n\n  background: ${colorSelector ? \"#F0EFEF\" : \"white\"};\n  \ndisplay:none;\n}\n\n\n`}</style>\n          <Toolbar style={{ paddingRight: \"6%\" }}>\n            <Typography\n              variant=\"h6\"\n              style={{ cursor: \"pointer\" }}\n              onClick={handeHomePage}\n            >\n              GlobalHot20\n            </Typography>\n            {/* <p style={{ fontSize: \"10px\", display: \"flex\", marginLeft: \"5px\" }}>\n              Beta\n            </p>\n            <p style={{ fontSize: \"10px\", marginLeft: \"2px\" }}>3.0</p> */}\n            <div\n              style={{\n                marginLeft: \"20px\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <Countdown date={Date.now() + remaningTime} renderer={renderer} />\n\n              {colorSelector ? (\n                <BlackOnGreenTooltip\n                  title=\"count down to the next day’s results\"\n                  style={{ color: \"red\" }}\n                  arrow\n                  TransitionComponent={Zoom}\n                >\n                  <img\n                    src={colorIcon}\n                    style={{\n                      marginLeft: \"10px\",\n                      marginTop: \"2%\",\n                      width: \"20px\",\n                      height: \"20px\",\n                    }}\n                  />\n                </BlackOnGreenTooltip>\n              ) : (\n                <BlueOnGreenTooltip\n                  title=\"\n  count down to the next day’s results\"\n                  style={{ color: \"red\" }}\n                  arrow\n                  TransitionComponent={Zoom}\n                >\n                  <img\n                    src={darkIcon}\n                    style={{\n                      marginLeft: \"10px\",\n                      marginTop: \"2%\",\n                      width: \"20px\",\n                      height: \"20px\",\n                    }}\n                  />\n                </BlueOnGreenTooltip>\n              )}\n            </div>\n\n            <div\n              style={{\n                display: \"flex\",\n                width: \"100%\",\n                justifyContent: \"flex-end\",\n              }}\n            >\n              <p className=\"desktop-menu\" onClick={handelAboutUs}>\n                Guide\n              </p>\n\n              {/* <p className=\"desktop-menu\" onClick={handelCharity}>\n                Charities\n              </p> */}\n            </div>\n            {/* <div>\n              <IconButton\n                color=\"primary\"\n                aria-label=\"upload picture\"\n                component=\"span\"\n                onClick={handleClick}\n              >\n                <PersonIcon style={{ color: \"white\" }} />\n              </IconButton>\n              {colorSelector ? (\n                <StyledMenu2\n                  id=\"customized-menu\"\n                  anchorEl={anchorEl}\n                  keepMounted\n                  open={Boolean(anchorEl)}\n                  onClose={handleClose}\n                >\n                  <StyledMenuItem2 onClick={() => handelPush(\"/signin\")}>\n                    <ListItemText primary=\"Login\" />\n                  </StyledMenuItem2>\n                  <StyledMenuItem2 onClick={() => handelPush(\"/signup\")}>\n                    <ListItemText primary=\"Sign Up\" />\n                  </StyledMenuItem2>\n                </StyledMenu2>\n              ) : (\n                <StyledMenu\n                  id=\"customized-menu\"\n                  anchorEl={anchorEl}\n                  keepMounted\n                  open={Boolean(anchorEl)}\n                  onClose={handleClose}\n                >\n                  <StyledMenuItem onClick={() => handelPush(\"/signin\")}>\n                    <ListItemText primary=\"Login\" />\n                  </StyledMenuItem>\n                  <StyledMenuItem onClick={() => handelPush(\"/signup\")}>\n                    <ListItemText primary=\"Sign Up\" />\n                  </StyledMenuItem>\n                </StyledMenu>\n              )}\n            </div> */}\n            <IconButton aria-label=\"add an alarm\" onClick={handleChange}>\n              {colorSelector ? (\n                <WbSunnyIcon style={{ color: \"white\" }} />\n              ) : (\n                <Brightness3Icon style={{ color: \"black\" }} />\n              )}\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n      </Hidden>\n    </>\n  );\n};\n\nexport default Topbar;\n","export const top20DataAction = (data) => {\n  return {\n    type: \"SET_TOP_20_VIDEOS\",\n    payload: data,\n  };\n};\nexport const hot20DataAction = (data) => {\n  return {\n    type: \"SET_HOT_20_VIDEOS\",\n    payload: data,\n  };\n};\n\nexport const regionsDataAction = (data) => {\n  return {\n    type: \"REGIONS_DATA\",\n    payload: data,\n  };\n};\n\nexport const componentHeight = (data) => {\n  return {\n    type: \"SET_COMPONENT_HEIGHT\",\n    payload: data,\n  };\n};\n\nexport const componentMode = (data) => {\n  return {\n    type: \"SET_COMPONENT_MODE\",\n    payload: data,\n  };\n};\n\nexport const setLoading = (data) => {\n  return {\n    type: \"SET_LOADING\",\n    payload: data,\n  };\n};\nexport const setHistory = (data) => {\n  return {\n    type: \"SET_HISTORY\",\n    payload: data,\n  };\n};\nexport const setTabValue = (data) => {\n  return {\n    type: \"SET_TAB_VALUE\",\n    payload: data,\n  };\n};\nexport const setSelectorText = (data) => {\n  return {\n    type: \"SET_SELECTOR_TEXT\",\n    payload: data,\n  };\n};\nexport const setOldSelectorText = (data) => {\n  return {\n    type: \"SET_OLD_SELECTOR_TEXT\",\n    payload: data,\n  };\n};\nexport const setCallUserLocation = (data) => {\n  return {\n    type: \"SET_CALL_USER_LOCATION\",\n    payload: data,\n  };\n};\n\nexport const top20NewDataAction = (data) => {\n  return {\n    type: \"SET_TOP_20_NEW\",\n    payload: data,\n  };\n};\n\nexport const getGlobalTrending = (data) => {\n  return {\n    type: \"GET_GLOBAL_TRENDING\",\n    payload: data,\n  };\n};\n\nexport const resetData = () => {\n  return {\n    type: \"RESET\",\n  };\n};\n","export default __webpack_public_path__ + \"static/media/color.c6e3488f.svg\";","export default __webpack_public_path__ + \"static/media/dark.73f2460f.svg\";"],"sourceRoot":""}